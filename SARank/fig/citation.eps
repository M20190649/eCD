%!PS-Adobe-2.0
%%Title: citation.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Wed Feb 01 23:14:27 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 503 230
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 503 50 lineto 503 230 lineto 50 230 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (citation.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (HuRJ-ACT)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb 01 23:14:27 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-Roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
0.100 UL
LTa
LCa setrgbcolor
372 384 M
3947 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
372 384 M
50 0 V
3897 0 R
-50 0 V
stroke
300 384 M
[ [(Times-Roman) 120.0 0.0 true true 0 (0)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.100 UL
LTa
LCa setrgbcolor
372 638 M
3947 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
372 638 M
50 0 V
3897 0 R
-50 0 V
stroke
300 638 M
[ [(Times-Roman) 120.0 0.0 true true 0 (5)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.100 UL
LTa
LCa setrgbcolor
372 893 M
3947 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
372 893 M
50 0 V
3897 0 R
-50 0 V
stroke
300 893 M
[ [(Times-Roman) 120.0 0.0 true true 0 (10)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.100 UL
LTa
LCa setrgbcolor
372 1147 M
3947 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
372 1147 M
50 0 V
3897 0 R
-50 0 V
stroke
300 1147 M
[ [(Times-Roman) 120.0 0.0 true true 0 (15)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.100 UL
LTa
LCa setrgbcolor
372 1402 M
3164 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
372 1402 M
50 0 V
3897 0 R
-50 0 V
stroke
300 1402 M
[ [(Times-Roman) 120.0 0.0 true true 0 (20)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.100 UL
LTa
LCa setrgbcolor
372 1656 M
3947 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
372 1656 M
50 0 V
3897 0 R
-50 0 V
stroke
300 1656 M
[ [(Times-Roman) 120.0 0.0 true true 0 (25)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
372 384 M
0 31 V
0 1241 R
0 -31 V
stroke
372 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
569 384 M
0 31 V
0 1241 R
0 -31 V
stroke
569 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 1)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
767 384 M
0 31 V
0 1241 R
0 -31 V
stroke
767 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 2)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
964 384 M
0 31 V
0 1241 R
0 -31 V
stroke
964 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 3)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1161 384 M
0 31 V
0 1241 R
0 -31 V
stroke
1161 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 4)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1359 384 M
0 31 V
0 1241 R
0 -31 V
stroke
1359 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 5)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1556 384 M
0 31 V
0 1241 R
0 -31 V
stroke
1556 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 6)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1753 384 M
0 31 V
0 1241 R
0 -31 V
stroke
1753 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 7)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1951 384 M
0 31 V
0 1241 R
0 -31 V
stroke
1951 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 8)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2148 384 M
0 31 V
0 1241 R
0 -31 V
stroke
2148 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 9)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2345 384 M
0 31 V
0 1241 R
0 -31 V
stroke
2345 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 10)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2543 384 M
0 31 V
0 1241 R
0 -31 V
stroke
2543 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 11)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2740 384 M
0 31 V
0 1241 R
0 -31 V
stroke
2740 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 12)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2938 384 M
0 31 V
0 1241 R
0 -31 V
stroke
2938 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 13)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3135 384 M
0 31 V
0 1241 R
0 -31 V
stroke
3135 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 14)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3332 384 M
0 31 V
0 1241 R
0 -31 V
stroke
3332 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 15)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3530 384 M
0 31 V
0 1241 R
0 -31 V
stroke
3530 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 16)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3727 384 M
0 31 V
0 1241 R
0 -31 V
stroke
3727 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 17)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3924 384 M
0 31 V
0 1241 R
0 -31 V
stroke
3924 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 18)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4122 384 M
0 31 V
0 1241 R
0 -31 V
stroke
4122 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 19)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4319 384 M
0 31 V
0 1241 R
0 -31 V
stroke
4319 264 M
[ [(Times-Roman) 120.0 0.0 true true 0 ( 20)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
372 1656 N
372 384 L
3947 0 V
0 1272 V
-3947 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
96 1020 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 120.0 0.0 true true 0 (% of total citations)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
2345 84 M
[ [(Times-Roman) 120.0 0.0 true true 0 (# of years after publication)]
] -40.0 MCshow
LTb
% Begin plot #1
1.000 UP
2.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
3824 1494 M
[ [(Times-Roman) 120.0 0.0 true true 0 (AAN)]
] -40.0 MRshow
1.000 UP
2.000 UL
LTb
0.58 0.00 0.83 C 3896 1494 M
351 0 V
372 589 M
197 668 V
198 -75 V
964 1021 L
1161 909 L
1359 798 L
197 -62 V
197 -77 V
198 -56 V
197 -66 V
197 -29 V
198 -17 V
197 -21 V
198 -16 V
197 -9 V
197 -14 V
198 -9 V
197 -5 V
197 -6 V
198 -14 V
197 -5 V
372 589 Circle
569 1257 Circle
767 1182 Circle
964 1021 Circle
1161 909 Circle
1359 798 Circle
1556 736 Circle
1753 659 Circle
1951 603 Circle
2148 537 Circle
2345 508 Circle
2543 491 Circle
2740 470 Circle
2938 454 Circle
3135 445 Circle
3332 431 Circle
3530 422 Circle
3727 417 Circle
3924 411 Circle
4122 397 Circle
4319 392 Circle
4071 1494 Circle
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LTb
0.00 0.00 1.00 C LCb setrgbcolor
3824 1374 M
[ [(Times-Roman) 120.0 0.0 true true 0 (MAG)]
] -40.0 MRshow
1.000 UP
2.000 UL
LTb
0.00 0.00 1.00 C 3896 1374 M
351 0 V
372 511 M
569 763 L
198 93 V
964 835 L
197 -43 V
198 -42 V
197 -41 V
197 -37 V
198 -34 V
197 -30 V
197 -26 V
198 -23 V
197 -21 V
198 -19 V
197 -17 V
197 -14 V
198 -13 V
197 -11 V
197 -9 V
198 -8 V
197 -7 V
372 511 Crs
569 763 Crs
767 856 Crs
964 835 Crs
1161 792 Crs
1359 750 Crs
1556 709 Crs
1753 672 Crs
1951 638 Crs
2148 608 Crs
2345 582 Crs
2543 559 Crs
2740 538 Crs
2938 519 Crs
3135 502 Crs
3332 488 Crs
3530 475 Crs
3727 464 Crs
3924 455 Crs
4122 447 Crs
4319 440 Crs
4071 1374 Crs
% End plot #2
% Begin plot #3
1.000 UP
4.000 UL
LTa
1.00 0.00 0.00 C LCb setrgbcolor
3824 1254 M
[ [(Times-Roman) 120.0 0.0 true true 0 (DBLP)]
] -40.0 MRshow
1.000 UP
4.000 UL
LTa
1.00 0.00 0.00 C 3896 1254 M
351 0 V
372 1586 M
569 785 L
198 88 V
964 838 L
197 -53 V
198 -55 V
197 -54 V
197 -46 V
198 -42 V
197 -34 V
197 -28 V
198 -23 V
197 -20 V
198 -16 V
197 -14 V
197 -11 V
198 -10 V
197 -8 V
197 -6 V
198 -5 V
197 -5 V
372 1586 Box
569 785 Box
767 873 Box
964 838 Box
1161 785 Box
1359 730 Box
1556 676 Box
1753 630 Box
1951 588 Box
2148 554 Box
2345 526 Box
2543 503 Box
2740 483 Box
2938 467 Box
3135 453 Box
3332 442 Box
3530 432 Box
3727 424 Box
3924 418 Box
4122 413 Box
4319 408 Box
4071 1254 Box
% End plot #3
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
372 1656 N
372 384 L
3947 0 V
0 1272 V
-3947 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
